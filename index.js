require("dotenv").config();
const { Client, GatewayIntentBits, EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, ModalBuilder, TextInputBuilder, TextInputStyle } = require('discord.js');
const fs = require('fs');
const tw = require('@fortune-inc/tw-voucher');
const config = require('./config.json');

const client = new Client({
    intents: [
        GatewayIntentBits.Guilds,
        GatewayIntentBits.GuildMessages,
        GatewayIntentBits.GuildMembers,
        GatewayIntentBits.MessageContent
    ]
});

client.on("ready", async () => {
    console.log(`‚úÖ ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå: ${client.user.tag}`);
});

client.on("interactionCreate", async (interaction) => {
    if (!interaction.isButton()) return;

    if (interaction.customId === "‡∏ã‡∏∑‡πâ‡∏≠‡∏¢‡∏®") {
        const modal = new ModalBuilder()
            .setCustomId('topup')
            .setTitle('‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô TrueMoney');
        
        const codeInput = new TextInputBuilder()
            .setCustomId('codeInput')
            .setLabel("‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå‡∏ã‡∏≠‡∏á‡∏≠‡∏±‡∏á‡πÄ‡∏õ‡∏≤")
            .setPlaceholder('https://gift.truemoney.com/campaign/?v=xxxxxxxxxxxxxxx')
            .setStyle(TextInputStyle.Short);

        const actionRow = new ActionRowBuilder().addComponents(codeInput);
        modal.addComponents(actionRow);
        await interaction.showModal(modal);
    }
});

client.on("interactionCreate", async (interaction) => {
    if (!interaction.isModalSubmit()) return;
    
    if (interaction.customId === "topup") {
        const codeInput = interaction.fields.getTextInputValue('codeInput');
        if (!codeInput.includes("https://gift.truemoney.com/campaign/?v")) {
            return await interaction.reply({
                embeds: [new EmbedBuilder().setColor("Red").setDescription('‚ùå ‡∏•‡∏¥‡πâ‡∏á‡∏Ñ‡πå‡∏ú‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß')],
                ephemeral: true
            });
        }

        tw(config.wallet_phone, codeInput).then(async re => {
            const amount = re.amount.toString();
            if (config.roles[amount]) {
                await interaction.member.roles.add(config.roles[amount]);
                await interaction.reply({ embeds: [new EmbedBuilder().setColor("Green").setDescription(`‚úÖ ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ${re.amount} ‡∏ö‡∏≤‡∏ó`)], ephemeral: true });

                const logChannel = interaction.guild.channels.cache.get(config.channellog);
                if (logChannel) {
                    logChannel.send({
                        embeds: [new EmbedBuilder().setDescription(`üí∞ **‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à**: ${re.amount} ‡∏ö‡∏≤‡∏ó\nüë§ ‡πÇ‡∏î‡∏¢: <@${interaction.user.id}>`).setColor("Green")]
                    });
                }
            } else {
                await interaction.reply({ embeds: [new EmbedBuilder().setColor("Red").setDescription("‚ùå ‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à")], ephemeral: true });
            }
        }).catch(async () => {
            await interaction.reply({ embeds: [new EmbedBuilder().setColor("Red").setDescription("‚ùå ‡∏•‡∏¥‡∏á‡∏Ñ‡πå‡∏ú‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß")], ephemeral: true });
        });
    }
});

client.login(process.env.TOKEN);